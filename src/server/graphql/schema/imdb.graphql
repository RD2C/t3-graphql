
# IMDB

type Review {
  id: ID!
  text: String
  movie: Movie
}

type Movie {
  id: ID!
  title: String
  rating: Float
  trailerURL: String
  reviews: [Review]
  genre: String
  # Length of movie in minutes
  length: Int
  aired: Boolean

  actors: [Person]
  writers: [Person]
}

enum MovieSorting {
  RATING
  DATE_DESC
  DATE_ASC
}

input MovieFilter {
  genre: String
  dateAfter: String
  search: String
  hitMoviesOnly: Boolean
}

type Person {
  id: ID!
  firstName: String
  lastName: String
  dateOfBirth: String
  writtenMovies: [Movie]
  actedMovies: [Movie]
}


type WatchlistAddResult {
  success: Boolean
  movie: Movie
}

type Query {
  movies(filter: MovieFilter sortBy: MovieSorting): [Movie]
  movie(id: ID!): Movie
  people(search: String): [Person]
}

type Mutation {
  #IMDB
  addToWatchlist(movieID: ID): WatchlistAddResult
  reviewMovie(text: String, movieID: ID): Boolean
  addView(movieID: ID): Boolean
}

type Subscription {
  addToWatchlistSubscribe: WatchlistAddResult
}

